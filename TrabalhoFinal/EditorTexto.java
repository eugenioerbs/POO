/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package screens;

import codes.ArquivoBinario;
import java.awt.Color;
import java.io.File;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 *
 * @author Usuario
 */
public class EditorTexto extends javax.swing.JFrame {

    
    
    /**
     * Creates new form Editor_Texto
     */
    
    
    public EditorTexto() {
        initComponents();
    }//construtor
  
    private void abrirArquivo () {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Abrir arquivo");
        fileChooser.setFileFilter(new FileNameExtensionFilter("Arquivos POO", "poo"));
        int result = fileChooser.showOpenDialog(this);
        
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            String texto = new ArquivoBinario().abrirArquivo(file);
            
            if (texto != null) {
                jblPainel.setText(texto);
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao abrir arquivo");
            }
        }
    }
    
    private void salvarArquivo () {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Salvar Arquivo");
        fileChooser.setFileFilter(new FileNameExtensionFilter("Arquivos POO", "poo"));
        int result = fileChooser.showSaveDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            if (!file.getName().endsWith(".poo")) {
                file = new File(file.getAbsolutePath() + ".poo");
                
            }
            if (file.exists()) {
                int overwrite = JOptionPane.showConfirmDialog(this, "Arquivo já exixte. Deseja substituir?", "Confirmação", JOptionPane.YES_NO_OPTION);
                if (overwrite == JOptionPane.NO_OPTION) {
                    return;
                }
            }
            new ArquivoBinario().salvarArquivo(file, jblPainel.getText());
            JOptionPane.showMessageDialog(this, "Arquivo salvo com sucesso.");
        }
    }

    private void aplicarNegrito () {
        StyledDocument doc = jblPainel.getStyledDocument();
        SimpleAttributeSet negrito =  new SimpleAttributeSet();
        StyleConstants.setBold(negrito, true);
        jblPainel.setCharacterAttributes(negrito, false);
    }
    
    private void mudarCorTexto (Color cor) {
        StyledDocument doc = jblPainel.getStyledDocument();
        SimpleAttributeSet colorAttr =  new SimpleAttributeSet();
        StyleConstants.setForeground(colorAttr, cor);
        jblPainel.setCharacterAttributes(colorAttr, false);
    }
    
    private void alinharTexto (int alinhamento) {
        StyledDocument doc = jblPainel.getStyledDocument();
        SimpleAttributeSet alignAttr =  new SimpleAttributeSet();
        StyleConstants.setAlignment(alignAttr, alinhamento);
        doc.setParagraphAttributes(0, doc.getLength(), alignAttr, false);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jblPainel = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jblArquivo = new javax.swing.JMenu();
        jblSalvar = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jblEditar = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jblNegrito = new javax.swing.JMenuItem();
        jblColorir = new javax.swing.JMenuItem();
        jblAlinhar = new javax.swing.JMenuItem();
        jblSobre = new javax.swing.JMenu();
        jblinfo = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Editor de Texto");
        setMinimumSize(new java.awt.Dimension(564, 473));

        jScrollPane1.setViewportView(jblPainel);

        jblArquivo.setText("Arquivo");

        jblSalvar.setText("Salvar");
        jblSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jblSalvarActionPerformed(evt);
            }
        });
        jblArquivo.add(jblSalvar);

        jMenuItem2.setText("Abrir");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jblArquivo.add(jMenuItem2);

        jMenuBar1.add(jblArquivo);

        jblEditar.setText("Editar");

        jMenu4.setText("Editar");

        jblNegrito.setText("Put negrito");
        jblNegrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jblNegritoActionPerformed(evt);
            }
        });
        jMenu4.add(jblNegrito);

        jblColorir.setText("Colorir");
        jblColorir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jblColorirActionPerformed(evt);
            }
        });
        jMenu4.add(jblColorir);

        jblAlinhar.setText("Alinhar");
        jblAlinhar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jblAlinharActionPerformed(evt);
            }
        });
        jMenu4.add(jblAlinhar);

        jblEditar.add(jMenu4);

        jMenuBar1.add(jblEditar);

        jblSobre.setText("Sobre");

        jblinfo.setText("Informações sobre o desenvolvimento");
        jblinfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jblinfoActionPerformed(evt);
            }
        });
        jblSobre.add(jblinfo);

        jMenuBar1.add(jblSobre);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jblNegritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jblNegritoActionPerformed
        aplicarNegrito();
    }//GEN-LAST:event_jblNegritoActionPerformed

    private void jblinfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jblinfoActionPerformed
        new Sobre().setVisible(true);
        
    }//GEN-LAST:event_jblinfoActionPerformed

    private void jblSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jblSalvarActionPerformed
        salvarArquivo();
    }//GEN-LAST:event_jblSalvarActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        abrirArquivo();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jblColorirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jblColorirActionPerformed
        String cor = JOptionPane.showInputDialog("Seacrh for the color:");
          
        if (cor.equalsIgnoreCase("vermelha")) {
           mudarCorTexto(Color.red);
        } else if (cor.equalsIgnoreCase("azul")) {
            mudarCorTexto(Color.blue);
        } else if (cor.equalsIgnoreCase("amarelo")) {
            mudarCorTexto(Color.yellow);
        }
        
    }//GEN-LAST:event_jblColorirActionPerformed

    private void jblAlinharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jblAlinharActionPerformed
        String escolhaAlinhamento =  JOptionPane.showInputDialog("Alinha para:");
        
        if (escolhaAlinhamento.equalsIgnoreCase("esquerda")) {
            alinharTexto(StyleConstants.ALIGN_LEFT);
        } else if (escolhaAlinhamento.equalsIgnoreCase("centro")) {
            alinharTexto(StyleConstants.ALIGN_CENTER);
        } else if (escolhaAlinhamento.equalsIgnoreCase("direita")) {
            alinharTexto(StyleConstants.ALIGN_RIGHT);
        }
        
    }//GEN-LAST:event_jblAlinharActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditorTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditorTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditorTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditorTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditorTexto().setVisible(true);
            } 
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem jblAlinhar;
    private javax.swing.JMenu jblArquivo;
    private javax.swing.JMenuItem jblColorir;
    private javax.swing.JMenu jblEditar;
    private javax.swing.JMenuItem jblNegrito;
    private javax.swing.JTextPane jblPainel;
    private javax.swing.JMenuItem jblSalvar;
    private javax.swing.JMenu jblSobre;
    private javax.swing.JMenuItem jblinfo;
    // End of variables declaration//GEN-END:variables
}
